#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
Name     : flake8-class-newline
Version  : 1.6.0
Release  : 12
URL      : https://files.pythonhosted.org/packages/17/f3/d93a95971801e0bd28539e7727e90553217ea76d48098ea02d10832f609f/flake8-class-newline-1.6.0.tar.gz
Source0  : https://files.pythonhosted.org/packages/17/f3/d93a95971801e0bd28539e7727e90553217ea76d48098ea02d10832f609f/flake8-class-newline-1.6.0.tar.gz
Summary  : Flake8 lint for newline after class definitions.
Group    : Development/Tools
License  : MIT
Requires: flake8-class-newline-license = %{version}-%{release}
Requires: flake8-class-newline-python = %{version}-%{release}
Requires: flake8-class-newline-python3 = %{version}-%{release}
Requires: flake8
BuildRequires : buildreq-distutils3
BuildRequires : flake8

%description
Flake8 Extension to lint for a method newline after a Class definition
===========================================

.. image:: https://travis-ci.org/AlexvEck/flake8-class-newline.svg?branch=master
    :target: https://travis-ci.org/AlexvEck/flake8-class-newline
   :alt: Build Status

Usage
-----

If you are using flake8, you can install this package through pip.

.. code:: shell

    pip install flake8-class-newline

This plugin is then automatically triggered when you run;

.. code:: shell

    flake8

It produces only 1 error type; "CNL100 Class definition does not have a new line."

NOTE; Documentation blocks (or docblocks) should be on the newline, they are therefore ignored by this plugin. See https://www.python.org/dev/peps/pep-0008/#documentation-strings


Example
-----

PEP8 says we should surround every class method with a single blank line. See https://www.python.org/dev/peps/pep-0008/#blank-lines
However flake8 is ambiguous about the first method having a blank line above it.

Basically;

.. code:: python

    class AClassWithoutANewLine(object):
        def a_method(self):
            return 'a_value'

    class AClassWithoutANewLineProperty(object):
        @property
        def a_method(self):
            return 'a_value'

or

.. code:: python

    class AClassWithANewLine(object):

        def a_method(self):
            return 'a_value'

    class AClassWithANewLineProperty(object):

        @property
        def a_method(self):
            return 'a_value'



This plugin was made to enforce the latter.

NOTE; properties of a class do not need a surrounding blank line, only methods.

Special Notice
-----

This package was inspired by flake8-quotes created by @zheller.
Thanks for the inspiration!

%package license
Summary: license components for the flake8-class-newline package.
Group: Default

%description license
license components for the flake8-class-newline package.


%package python
Summary: python components for the flake8-class-newline package.
Group: Default
Requires: flake8-class-newline-python3 = %{version}-%{release}

%description python
python components for the flake8-class-newline package.


%package python3
Summary: python3 components for the flake8-class-newline package.
Group: Default
Requires: python3-core
Provides: pypi(flake8-class-newline)

%description python3
python3 components for the flake8-class-newline package.


%prep
%setup -q -n flake8-class-newline-1.6.0
cd %{_builddir}/flake8-class-newline-1.6.0

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1582923602
# -Werror is for werrorists
export GCC_IGNORE_WERROR=1
export CFLAGS="$CFLAGS -fno-lto "
export FCFLAGS="$CFLAGS -fno-lto "
export FFLAGS="$CFLAGS -fno-lto "
export CXXFLAGS="$CXXFLAGS -fno-lto "
export MAKEFLAGS=%{?_smp_mflags}
python3 setup.py build

%check
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
PYTHONPATH=%{buildroot}$(python -c "import sys; print(sys.path[-1])") python setup.py test
%install
export MAKEFLAGS=%{?_smp_mflags}
rm -rf %{buildroot}
mkdir -p %{buildroot}/usr/share/package-licenses/flake8-class-newline
cp %{_builddir}/flake8-class-newline-1.6.0/LICENSE %{buildroot}/usr/share/package-licenses/flake8-class-newline/8aec8ab776c95f72ec18b58a7a68c81d4ddc8408
python3 -tt setup.py build  install --root=%{buildroot}
echo ----[ mark ]----
cat %{buildroot}/usr/lib/python3*/site-packages/*/requires.txt || :
echo ----[ mark ]----

%files
%defattr(-,root,root,-)

%files license
%defattr(0644,root,root,0755)
/usr/share/package-licenses/flake8-class-newline/8aec8ab776c95f72ec18b58a7a68c81d4ddc8408

%files python
%defattr(-,root,root,-)

%files python3
%defattr(-,root,root,-)
/usr/lib/python3*/*
